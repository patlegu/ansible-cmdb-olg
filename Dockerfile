# syntax=docker/dockerfile:1.4
# To build the image :
# DOCKER_BUILDKIT=1 docker build -t ansible-cmdb .
# To run the image with name CMDB.
# docker run --rm -i --name CMDB -v $(pwd):/tmp/ansible-cmdb:z ansible-cmdb

# pull base image
FROM debian:10.12-slim

ARG USER=www-data
ARG WWW_NAME=cmdb
ARG DIRECTORY=ansible-cmdb
ARG APACHE_LOG_DIR=/var/www/html/$DIRECTORY/log

MAINTAINER breizhlandocker <psychomonckey@hotmail.fr>

RUN echo "===> Installing python, sudo, and supporting tools..."  && \
    apt-get update -y  &&  apt-get install --fix-missing          && \
    DEBIAN_FRONTEND=noninteractive         \
    apt-get install -y                     \
        python3 python3-setuptools python3-psutil python3-bottle python3-requests libzbar-dev libzbar0 \
        python3-yaml sudo sshpass  curl gcc python3-pip python3-dev libffi-dev libssl-dev genisoimage unrar-free \
        libxml2-dev libxslt-dev apache2 && \
    apt-get -y --purge remove python-cffi          && \
    echo "===> Installing Ansible..."   && \
    pip3 install ansible                 && \
    \
    echo "===> Installing Ansible-cmdb..."   && \
    pip3 install ansible-cmdb                 && \
    \
    \
    echo "===> Removing unused APT resources..."                  && \
    apt-get -f -y --auto-remove remove \
       gcc python3-pip python3-dev libffi-dev libssl-dev  && \
    apt-get clean                                                 && \
    rm -rf /var/lib/apt/lists/*  /tmp/*                          && \
    \
    \
    echo "===> Adding hosts for convenience..."        && \
    mkdir -p /etc/ansible                              && \
    echo 'localhost' > /etc/ansible/hosts*             && \
    \
    echo "===> Making symbolic link from python3 to python  ..."  && \
	ln -s /usr/bin/python3 /usr/bin/python

RUN <<OEF
    echo "Configuring apache for ansible-cmdb ..."
    mkdir -p /var/www//html/$DIRECTORY
    chown -R $USER:$USER /var/www/html/$DIRECTORY
    chmod -R 755 /var/www/html/$DIRECTORY
OEF

COPY <<EOF /etc/apache2/sites-available/ansible-cmdb.conf
<VirtualHost *:80>
    ServerAdmin admin@your_email_domain
    ServerName $WWW_NAME
    ServerAlias www.$WWW_NAME
    DocumentRoot /var/www/html/$DIRECTORY
    ErrorLog $APACHE_LOG_DIR/error.log
    CustomLog $APACHE_LOG_DIR/access.log combined
</VirtualHost>
EOF

COPY <<EOF /var/spool/cron/crontabs/root
# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.2IYZhg/crontab installed on Sun Jun 12 17:49:47 2022)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command

# TEST DE FICHIER CRON

EOF

ONBUILD  WORKDIR  /tmp
ONBUILD  COPY  ansible-cmdb/  /tmp
ONBUILD  RUN  \
              echo "===> Diagnosis: host information..."  && \
              ansible -c local -m setup all

# default command: display Ansible-cmdb version
CMD [ "ansible-cmdb", "--version" ]
